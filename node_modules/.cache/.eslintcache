[{"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/index.js":"1","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/App.js":"2","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/SingIn.js":"3","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/SingUp.js":"4","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Habits.js":"5","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Today.js":"6","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/History.js":"7","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/styles/GlobalStyle.js":"8","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/BigLogo.js":"9","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Header.js":"10","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/CreateHabits.js":"11","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Footer.js":"12","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/contexts/UserContext.js":"13","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/contexts/HabitsContext.js":"14","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/AddHabit.js":"15","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Day.js":"16","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Habit.js":"17","/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/index.js":"18","/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/components/App.js":"19","/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/components/Flashcards.js":"20","/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/components/Card.js":"21"},{"size":132,"mtime":1653584513136,"results":"22","hashOfConfig":"23"},{"size":1923,"mtime":1654052431887,"results":"24","hashOfConfig":"23"},{"size":3383,"mtime":1654064324896,"results":"25","hashOfConfig":"23"},{"size":3283,"mtime":1654065023208,"results":"26","hashOfConfig":"23"},{"size":349,"mtime":1654035815347,"results":"27","hashOfConfig":"23"},{"size":6718,"mtime":1654064606296,"results":"28","hashOfConfig":"23"},{"size":454,"mtime":1654064572632,"results":"29","hashOfConfig":"23"},{"size":1571,"mtime":1653684862960,"results":"30","hashOfConfig":"23"},{"size":349,"mtime":1653584513132,"results":"31","hashOfConfig":"23"},{"size":1027,"mtime":1653942270450,"results":"32","hashOfConfig":"23"},{"size":726,"mtime":1654035591275,"results":"33","hashOfConfig":"23"},{"size":2018,"mtime":1654052951423,"results":"34","hashOfConfig":"23"},{"size":105,"mtime":1653585949840,"results":"35","hashOfConfig":"23"},{"size":109,"mtime":1653586346444,"results":"36","hashOfConfig":"23"},{"size":4700,"mtime":1654065145668,"results":"37","hashOfConfig":"23"},{"size":912,"mtime":1653934460336,"results":"38","hashOfConfig":"23"},{"size":3941,"mtime":1654038111019,"results":"39","hashOfConfig":"23"},{"size":231,"mtime":1658804313377,"results":"40","hashOfConfig":"41"},{"size":5214,"mtime":1658803549399,"results":"42","hashOfConfig":"41"},{"size":861,"mtime":1658803115456,"results":"43","hashOfConfig":"41"},{"size":4414,"mtime":1658803622132,"results":"44","hashOfConfig":"41"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"zrc7ye",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"47"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"47"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"47"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4349ol",{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/index.js",[],["97","98"],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/App.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/SingIn.js",["99","100","101","102","103"],"import { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router';\nimport { ThreeDots } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nimport BigLogo from \"./BigLogo\";\nimport UserContext from './contexts/UserContext';\n\nexport default function SingIn(){\n\n    let navigate = useNavigate();\n\n    const {userData, setUserData} = useContext(UserContext);\n    const {token, setToken} = useContext(UserContext);\n\n\n    const[loginEmail, setLoginEmail] = useState('');\n    const[loginPassword, setLoginPassword] = useState('');\n\n    const[buttonContent, setButtonContent] = useState(\"Entrar\");\n    const [nextPage, setNextPage] = useState(\"\");\n\n\n    function postLoginData(event){\n        \n        event.preventDefault();\n\n        {(token)?\n\n            <p>Entrar</p>\n        :\n            setButtonContent(<ThreeDots color=\"#FFFFFF\" height={80} width={80} />)\n        }\n\n\n        const body = {\n            email: loginEmail,\n            password: loginPassword\n        }\n\n        const promisse = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/login', body);\n\n        promisse.then((res) => {\n            \n            setToken(res.data.token)\n\n            const {id, name, image, email, token} = res.data;\n            const localData = {id, name, image, email, token}\n\n            const serializeUserData = JSON.stringify(localData);\n            localStorage.setItem('localUserData', serializeUserData);\n\n            navigate('/hoje')\n            \n        });\n        promisse.catch(\n\n        )\n\n    }\n\n    return(\n        <>\n            <BigLogo/>\n            <Container>\n                <Form onSubmit={postLoginData}>\n                    <input type=\"email\" placeholder=\"email\"  value={loginEmail} onChange={(e) => setLoginEmail(e.target.value)} required/>\n                    <input type=\"password\" placeholder=\"senha\"  value={loginPassword} onChange={(e) => setLoginPassword(e.target.value)} required/>    \n                    <Button type=\"submit\" style={linkStyle}>\n                            {buttonContent}\n                    </Button>\n                </Form>\n            </Container>\n            <Link to=\"/cadastro\" style={{color: '#52B6FF'}}>\n                <p>NÃ£o tem uma conta? Cadastre-se!</p>\n            </Link>\n        </>\n    );\n}\n\nconst Container = styled.div`\n    height: 22vh;\n    width: 90%;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n\n    margin-bottom: 8%;\n\n`;\n\nconst Form = styled.form`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n        input{\n            height: 28%;\n            width: 98%;\n            border: 1px solid #D5D5D5;\n            border-radius: 5px;\n            font-size: 20px;\n            color:#666666;\n\n            //PARA DESABILITAR OS INPUTS\n        }\n        p{\n            height: 100%;\n            width: 100%;\n            border-radius: 5px;\n        }\n`;\n\nconst Button = styled.button`\n    height: 28%;\n    width: 100%;\n    background-color: #52B6FF;\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    //PARA DESABILITAR O BOTÃO\n`;\n\nconst linkStyle = {\n    textDecoration: 'none',\n    fontSize: '20px',\n    color: '#FFFFFF'\n}","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/SingUp.js",["104"],"import { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from 'react-router-dom';\nimport { ThreeDots } from 'react-loader-spinner';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\n\nimport BigLogo from \"./BigLogo\";\nimport UserContext from './contexts/UserContext';\n\nexport default function SingUp(){\n\n    let navigate = useNavigate();\n\n    const {userData, setUserData} = useContext(UserContext);\n\n    const[buttonContent, setButtonContent] = useState(\"Cadastrar\");\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [name, setName] = useState('');\n    const [image, setImage] = useState('');\n    const [enableButton, setEnableButton] = useState(false);\n\n    function postUserData(event){\n\n        event.preventDefault();\n\n        (enableButton)?\n\n            <p>Cadastrar</p>\n        :\n            setButtonContent(<ThreeDots color=\"#FFFFFF\" height={80} width={80} />)\n        \n        \n        setUserData({email, name, image, password});\n        \n        const promisse = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/auth/sign-up', {\n            email: email,\n            name: name,\n            image: image,\n            password: password\n        });\n        promisse.then(() => {\n            navigate('/')\n        });\n        promisse.catch(() => setEnableButton(true));\n    }\n\n    return(\n        <>\n            <BigLogo/>\n            <Container>\n                <Form onSubmit={postUserData}>\n                    <input type=\"email\" required placeholder=\"email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\n                    <input type=\"password\" required placeholder=\"senha\"  value={password} onChange={(e) => setPassword(e.target.value)}/>\n                    <input type=\"text\" required placeholder=\"nome\"  value={name} onChange={(e) => setName(e.target.value)}/>\n                    <input type=\"url\" required placeholder=\"foto\" value={image} onChange={(e) => setImage(e.target.value)}/>\n                    <Button type=\"submit\" style={linkStyle}>\n                \n                            {buttonContent}\n                    </Button>\n                </Form>\n            </Container>\n            <Link to=\"/\" style={{color: '#52B6FF'}}>\n                {\"JÃ¡ tem uma conta? FaÃ§a login!\"}\n            </Link>\n        </>\n    );\n}\n\nconst Container = styled.div`\n    height: 38.5vh;\n    width: 90%;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 8%;\n\n`;\n\nconst Form = styled.form`\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n\n        input{\n            height: 16%;\n            border: 1px solid #D5D5D5;\n            border-radius: 5px;\n            font-size: 20px;\n            color:#666666;\n        }\n`;\n\nconst Button = styled.button`\n    height: 16%;\n    width: 80vw;\n    background-color: #52B6FF;\n    font-size: 20px;\n    color: #FFFFFF;\n\n    display:flex;\n    justify-content: center;\n    align-items: center;\n    //PARA DESABILITAR O BOTÃO\n`;\n\nconst linkStyle = {\n    textDecoration: 'none',\n    fontSize: '20px',\n    color: '#FFFFFF'\n}","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Habits.js",["105"],"\nimport Header from \"./Header\";\nimport CreateHabits from './CreateHabits';\nimport Footer from \"./Footer\";\nimport AddHabit from './AddHabit';\nimport Histoty from \"./History\";\n\nexport default function Habits(){\n\n    return(\n        <>\n            <Header/>\n            <AddHabit/>\n            <CreateHabits/>\n            <Footer/>\n        </>\n    );\n}","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Today.js",["106","107","108","109"],"import {useState, useContext, useEffect} from 'react';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport dayjs, { locale } from \"dayjs\";\nimport \"dayjs/locale/pt-br\";\n\nimport Header from './Header';\nimport Footer from './Footer';\n\nimport HabitsContext from './contexts/HabitsContext';\nimport check from '../image/check.png'\n\n\nexport default function Today(){\n\n    dayjs.locale('pt-br');\n    const now = dayjs().format(\"dddd, DD/MM\");\n\n    const { habitsToday, setHabitsToday } = useContext(HabitsContext);\n    const { progress, setProgress } = useContext(HabitsContext);\n\n    const serializedUsedData = localStorage.getItem(\"localUserData\");\n    const localUserData = JSON.parse(serializedUsedData);\n\n    const [validateButton, setValidateButton] = useState(false);\n\n    const config = {headers:{\"Authorization\": `Bearer ${localUserData.token}`}}\n    \n    useEffect(()=> {\n\n        const promisse = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', config);\n\n            promisse.then((response) => {\n\n                setHabitsToday(response.data);\n\n                let x = 0;\n\n                for(let i = 0; i < response.data.length; i++){\n                    if(response.data[i].done){\n                        x++;\n                    }\n                }\n\n                if(response.data.length === 0){\n                    setProgress(0);\n                } else {\n                    setProgress((100*(x/response.data.length)).toFixed());\n                }\n                    \n            });\n\n            promisse.catch(() => window.alert(\"deu ruim...\"));\n\n    },[progress])\n\n    function checkIt(id, done){\n\n        done?\n            revertHabit(id)\n        :\n            saveHabit(id)\n    }\n\n    function refreshProgress(){\n        let x = 0;\n\n        for(let i = 0; i < habitsToday.length; i++){\n            if(habitsToday[i].done){\n                x++;\n            }\n        }\n        setProgress((100*(x/habitsToday.length)).toFixed());\n    }\n\n\n    function saveHabit(habitId){\n\n        const promisse = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habitId}/check`,null,config);\n\n        promisse.then(() => {\n            \n                const promisse = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', config);\n\n                promisse.then(() => {\n\n                    const aux = [...habitsToday];\n                    for(let i = 0;i < aux.length;i++){\n                        if(aux[i].id === habitId){\n                            aux[i].done = true;\n                        }\n                    }\n                    setHabitsToday([...aux]);\n                    refreshProgress();\n                                   \n                });\n                promisse.catch(() => window.alert(\"deu ruim...\"));\n            }\n        );\n\n    }\n\n    function revertHabit(habitId){\n\n        const promisse = axios.post(`https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/${habitId}/uncheck`,null,config);\n\n        promisse.then(() => \n        \n            {\n\n                const promisse = axios.get('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits/today', config);\n\n                promisse.then((response) => {\n\n                    const aux = [...habitsToday];\n                    for(let i = 0;i < aux.length;i++){\n                        if(aux[i].id === habitId){\n                            aux[i].done = false;\n                        }\n                    }\n                    setHabitsToday([...aux]);\n                    refreshProgress();  \n                        \n                });\n                promisse.catch(() => window.alert(\"deu ruim dentro...\"));\n            }  \n        );\n        promisse.catch(() => window.alert(\"deu ruim na primeira...\"));\n    }\n\n    return(\n        <>  \n            <Header/>\n            <Date>\n                <h1>{now.charAt(0).toUpperCase() + now.slice(1)}</h1>\n\n                {(progress === 0)?\n\n                    <h3>Nenhum hÃ¡bito concluÃ­do ainda</h3>\n                    :\n                    <h2 >{progress}% dos hÃ¡bitos concluÃ­dos</h2>\n                }\n            </Date>\n            {\n                habitsToday.map((habit)=>{\n                    return(\n                        <ConfigureHabit key={habit.id}>\n                            <Habit>\n                                <HabitName>\n                                    {habit.name}\n                                </HabitName>\n                                <Days >\n                                    <p>SequÃªncia atual: {habit.currentSequence}</p>\n                                    <p>Seu recorde: {habit.highestSequence}</p>\n                                </Days>\n                            </Habit>\n                            <Check check={habit.done} key={habit.id} id={habit.id} onClick={()=> checkIt(habit.id, habit.done)}>\n                                <img src={check} alt=\"check\"/>\n                            </Check>\n                        </ConfigureHabit>\n                    )    \n                })\n            } \n            <Footer/>\n        </>\n    );\n}\n\nconst Date = styled.div`\n    height: 10vh;\n    width: 100%;\n\n    margin-bottom: 4vh;\n    margin-top: 15vh;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: left;\n\n        button{\n            height: 40px;\n            width: 40px;\n            background-color:#52B6FF;\n\n            font-size: 30px;\n            font-style: bold;\n            color: #FFFFFF;\n        }\n\n        h1{  \n            font-size: 22px;\n            color: #126BA5;\n            margin-bottom: 10px;\n        }\n        h2{\n            font-size: 18px;\n            color: #8FC549;\n        }\n        h3{\n            font-size: 18px;\n            color: #BABABA;        \n        }\n`;\n\nconst ConfigureHabit = styled.div`\n    height: 13vh;\n    width: 100%;\n    background-color: #ffffff;\n    color: #666666;\n\n    border-radius: 5px;\n    padding: 15px;\n    box-sizing: border-box;\n    margin-bottom: 10px;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst Habit = styled.div`\n    height: 100%;\n    width: 75%;\n\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n`;\n\nconst HabitName = styled.h1`\n    height: 60%;\n    font-size: 20px;\n`;\n\nconst Days = styled.div`\n    font-size: 13px;\n`;\n\nconst Check = styled.button`\n    height:100%;\n    width: 70px;\n    background-color: ${props => props.check ? \"#8FC549\" : \"#E7E7E7\"};\n    border-radius: 5px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\n\n","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/History.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/styles/GlobalStyle.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/BigLogo.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Header.js",["110","111","112"],"import {useContext} from 'react';\n\nimport styled from 'styled-components';\nimport logo from '../image/logo.png';\nimport UserContext from './contexts/UserContext';\n\nexport default function Header(){\n\n    \n    const {userData} = useContext(UserContext);\n    const {token, setToken} = useContext(UserContext);\n    \n    const serializedUsedData = localStorage.getItem(\"localUserData\");\n    const localUserData = JSON.parse(serializedUsedData);\n\n    return(\n        <Head>\n            <img src={logo} alt=\"logo\"/>\n            <User src={localUserData.image} alt=\"image\"/>\n        </Head>\n    );\n}\n\nconst Head = styled.header`\n    height: 12vh;\n    width: 100%;\n\n    background-color:#126BA5;\n    padding: 10px 10px;\n    box-sizing: border-box;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15); \n\n    position: fixed;\n    top: 0;\n\n    display: flex;\n    flex-direction: left;\n    align-items: center;\n    justify-content: space-between;\n\n`;\n\nconst User = styled.img`\n    height: 50px;\n    width: 50px;\n    \n    border-radius: 100%;\n`;","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/CreateHabits.js",["113","114","115","116"],"import { useState, useContext, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport UserContext from \"./contexts/UserContext\";\nimport Habit from \"./Habit\";\nimport HabitsContext from \"./contexts/HabitsContext\";\n\nexport default function CreateHabits(){\n\n    const {token} = useContext(UserContext);\n\n    const {habits} = useContext(HabitsContext);\n\n    return(\n        (habits.length !== null)?\n\n            <Habit/>\n        :\n        <>\n        <Message>\n            {\"VocÃª nÃ£o tem nenhum hÃ¡bito cadastrado ainda. Adicione um hÃ¡bito para comeÃ§ar a trackear!\"}\n        </Message>\n        </>\n    );\n}\n\n\nconst Message = styled.div`\n    font-size: 18px;\n    color: #666666;\n`;\n\n","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Footer.js",["117","118"],"import {Link} from 'react-router-dom';\nimport { buildStyles, CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport { CirclesWithBar } from 'react-loader-spinner';\n\nimport styled from 'styled-components';\nimport { CenturyView } from 'react-calendar';\nimport { useContext } from 'react';\nimport HabitsContext from './contexts/HabitsContext';\n\nexport default function Footer(){\n\n    const {progress} = useContext(HabitsContext);\n\n    return(\n        <NavBar>\n            <Link to=\"/habitos\" style={linkStyle}>\n                <p>HÃ¡bitos</p>\n            </Link>\n            <div style={{ width: '100px', height: '100px'}}>\n                <Link to=\"/hoje\" style={linkStyle}>\n                    <CircularProgressbar\n                        value={progress}\n                        text={'Hoje'}\n                        background={true}\n                        backgroundPadding={6} \n                        styles={buildStyles({\n                            textColor: 'white',\n                            backgroundColor: '#52B6FF',\n                            pathColor: 'white',\n                            trailColor: 'transparent'\n                        })}\n                    />\n                </Link>\n            </div>\n            <Link to=\"/historico\" style={linkStyle}>\n                <p>HistÃ³rico</p>\n            </Link>\n        </NavBar>\n    );\n}\n\nconst  NavBar = styled.footer`\n    height: 11vh;\n    width: 100%;\n\n    background-color:#FFFFFF;\n\n    position: fixed;\n    bottom: 0;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    align-items: center;\n\n        div{\n            margin-bottom: 8vh;\n        }\n        p{\n            height: 100%;\n            font-size: 22px;\n            color:#3e98c7;\n\n            display: flex;\n            justify-content: center;\n            align-items: center;\n        }\n\n`;\n\nconst linkStyle = {\n    textDecoration: 'none',\n    fontSize: '20px',\n    color: '#FFFFFF'\n}","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/contexts/UserContext.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/contexts/HabitsContext.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/AddHabit.js",["119","120","121"],"import {useState, useContext} from 'react';\n\nimport axios from 'axios';\nimport styled from 'styled-components';\n\nimport HabitsContext from './contexts/HabitsContext';\n\n\nexport default function AddHabit(){\n    const [openForm, setOpenForm] = useState(false);\n\n    const [habitName, setHabitName] = useState('');\n    const days = [\"D\", \"S\", \"T\", \"Q\", \"Q\", \"S\", \"S\"];\n\n    const [selectedDays, setSelectedDays] = useState([]);\n    const [enableButton, setEnableButton] = useState(false);\n\n    const {habits, setHabits} = useContext(HabitsContext);\n\n    const serializedUsedData = localStorage.getItem(\"localUserData\");\n    const localUserData = JSON.parse(serializedUsedData);\n\n    const body = {\n        name: habitName,\n        days: selectedDays\n    }\n\n    const config = {\n        headers: {\n            Authorization: `Bearer ${localUserData.token}`\n        }\n    }\n\n    function buttonSave(event){\n        \n        event.preventDefault();\n\n        //(enableButton)?\n\n            //<p>Cadastrar</p>\n        //:\n            //setButtonContent(<ThreeDots color=\"#FFFFFF\" height={80} width={80} />)\n\n        const promisse = axios.post('https://mock-api.bootcamp.respondeai.com.br/api/v2/trackit/habits', body, config);\n\n        promisse.then((res) => {\n\n            setOpenForm(!openForm);\n\n        });\n        promisse.catch(() => setEnableButton(true));\n\n    }\n\n    function toggleDay(selected, index){\n        if(!selected){\n            setSelectedDays([...selectedDays, index]);\n\n        } else{\n            const newDay = selectedDays.filter(day => day !== index);\n            setSelectedDays(newDay);\n        }\n        \n    }\n\n    return(\n        <>\n            <MyHabits>\n                <p>Meus hÃ¡bitos</p>\n                <button onClick={() => {setOpenForm(!openForm)}}>+</button>\n            </MyHabits>\n\n            {openForm && <ConfigureHabit key={1}>\n                <form onSubmit={buttonSave}>\n                    <input key=\"name\" type=\"text\" placeholder=\"nome do hÃ¡bito\" onChange={(e) => setHabitName(e.target.value)} required/>\n                    <Days>\n                        {days.map((day, index) => <DiaDaSemana key={index} toggleDay={toggleDay} index={index} day={day} />)}\n                    </Days>\n                <Buttons>\n                    <Cancel>Cancelar</Cancel>\n                    <Save type=\"submit\">Salvar</Save>\n                </Buttons>\n                </form>\n            </ConfigureHabit>}\n        </>\n    );\n}\n\nfunction DiaDaSemana({toggleDay, day, index}) {\n    const [selected, setSelected] = useState(false);\n\n    return (\n        <Divao key={index} onClick={() => { setSelected(!selected); toggleDay(selected, index) }} selected={selected}>{day}</Divao>\n    )\n}\n\nconst Divao = styled.div`\n    width: 30px;\n    height: 30px;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    background-color: ${({selected}) => selected ? \"#D5D5D5\" : \"#FFFFFF\"};\n    color:${({selected}) => selected ? \"#FFFFFF\" : \"#D5D5D5\"};\n    border: 1px solid #D5D5D5;\n    border-radius: 3px;\n`;\nconst MyHabits = styled.div`\n    height: 10vh;\n    width: 100%;\n\n    margin-top: 12vh;\n    box-sizing: border-box;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n\n    font-size: 22px;\n    color: #126BA5;\n\n        button{\n            height: 40px;\n            width: 40px;\n            background-color:#52B6FF;\n\n            font-size: 30px;\n            font-style: bold;\n            color: #FFFFFF;\n        }\n`;\nconst ConfigureHabit = styled.div`\n    height: 25vh;\n    width: 100%;\n    background-color: #ffffff;\n\n    border-radius: 5px;\n    padding: 15px;\n    box-sizing: border-box;\n\n    margin-bottom: 10px;\n\n    position: relative;\n\n        form{\n            height: 55%;\n            width: 100%;\n\n            display: flex;\n            flex-direction: column;\n            justify-content: space-between;\n        }\n        input{\n            height: 45%;\n            width: 80vw;\n            border: 1px solid #D5D5D5;\n            border-radius: 5px;\n            font-size: 18px;\n        }\n        input::placeholder{\n            color: #D5D5D5;\n        }\n`;\n\nconst Days = styled.div`\n    width: 75%;\n\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n`;\n\nconst Buttons = styled.div`\n    height: 25%;\n    width: 70%;\n    \n    position: absolute;\n    bottom: 15px;\n    right: -7px;\n    style: ${props => props.save};\n`;\n\nconst Save = styled.button`\n    height: 100%;\n    width: 45%;\n    background-color: #52B6FF;\n    color: #FFFFFF;\n`;\n\nconst Cancel = styled.button`\n    height: 100%;\n    width: 45%;\n    background-color: #FFFFFF;\n    color: #52B6FF;\n    `;\n","/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Day.js",[],["122","123"],"/home/inputusernamejansen/Documents/DRIVEN/projeto10-trackit/src/components/Habit.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/index.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/components/App.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/components/Flashcards.js",[],"/home/inputusernamejansen/Documents/DRIVEN/projeto8-zaprecall/src/components/Card.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":15,"column":12,"nodeType":"130","messageId":"131","endLine":15,"endColumn":20},{"ruleId":"128","severity":1,"message":"132","line":15,"column":22,"nodeType":"130","messageId":"131","endLine":15,"endColumn":33},{"ruleId":"128","severity":1,"message":"133","line":23,"column":12,"nodeType":"130","messageId":"131","endLine":23,"endColumn":20},{"ruleId":"128","severity":1,"message":"134","line":23,"column":22,"nodeType":"130","messageId":"131","endLine":23,"endColumn":33},{"ruleId":"135","severity":1,"message":"136","line":30,"column":9,"nodeType":"137","messageId":"138","endLine":35,"endColumn":10},{"ruleId":"128","severity":1,"message":"129","line":16,"column":12,"nodeType":"130","messageId":"131","endLine":16,"endColumn":20},{"ruleId":"128","severity":1,"message":"139","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":15},{"ruleId":"128","severity":1,"message":"140","line":4,"column":17,"nodeType":"130","messageId":"131","endLine":4,"endColumn":23},{"ruleId":"128","severity":1,"message":"141","line":25,"column":12,"nodeType":"130","messageId":"131","endLine":25,"endColumn":26},{"ruleId":"128","severity":1,"message":"142","line":25,"column":28,"nodeType":"130","messageId":"131","endLine":25,"endColumn":45},{"ruleId":"143","severity":1,"message":"144","line":55,"column":7,"nodeType":"145","endLine":55,"endColumn":17,"suggestions":"146"},{"ruleId":"128","severity":1,"message":"129","line":10,"column":12,"nodeType":"130","messageId":"131","endLine":10,"endColumn":20},{"ruleId":"128","severity":1,"message":"147","line":11,"column":12,"nodeType":"130","messageId":"131","endLine":11,"endColumn":17},{"ruleId":"128","severity":1,"message":"148","line":11,"column":19,"nodeType":"130","messageId":"131","endLine":11,"endColumn":27},{"ruleId":"128","severity":1,"message":"149","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":18},{"ruleId":"128","severity":1,"message":"150","line":1,"column":32,"nodeType":"130","messageId":"131","endLine":1,"endColumn":41},{"ruleId":"128","severity":1,"message":"151","line":2,"column":8,"nodeType":"130","messageId":"131","endLine":2,"endColumn":13},{"ruleId":"128","severity":1,"message":"147","line":10,"column":12,"nodeType":"130","messageId":"131","endLine":10,"endColumn":17},{"ruleId":"128","severity":1,"message":"152","line":4,"column":10,"nodeType":"130","messageId":"131","endLine":4,"endColumn":24},{"ruleId":"128","severity":1,"message":"153","line":7,"column":10,"nodeType":"130","messageId":"131","endLine":7,"endColumn":21},{"ruleId":"128","severity":1,"message":"154","line":16,"column":12,"nodeType":"130","messageId":"131","endLine":16,"endColumn":24},{"ruleId":"128","severity":1,"message":"155","line":18,"column":12,"nodeType":"130","messageId":"131","endLine":18,"endColumn":18},{"ruleId":"128","severity":1,"message":"156","line":18,"column":20,"nodeType":"130","messageId":"131","endLine":18,"endColumn":29},{"ruleId":"124","replacedBy":"157"},{"ruleId":"126","replacedBy":"158"},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'userData' is assigned a value but never used.","Identifier","unusedVar","'setUserData' is assigned a value but never used.","'nextPage' is assigned a value but never used.","'setNextPage' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'Histoty' is defined but never used.","'locale' is defined but never used.","'validateButton' is assigned a value but never used.","'setValidateButton' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'config', 'setHabitsToday', and 'setProgress'. Either include them or remove the dependency array.","ArrayExpression",["161"],"'token' is assigned a value but never used.","'setToken' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'CirclesWithBar' is defined but never used.","'CenturyView' is defined but never used.","'enableButton' is assigned a value but never used.","'habits' is assigned a value but never used.","'setHabits' is assigned a value but never used.",["159"],["160"],"no-global-assign","no-unsafe-negation",{"desc":"162","fix":"163"},"Update the dependencies array to be: [config, progress, setHabitsToday, setProgress]",{"range":"164","text":"165"},[1626,1636],"[config, progress, setHabitsToday, setProgress]"]